package com.phloc.html.hc.html;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import com.phloc.commons.text.IPredefinedLocaleTextProvider;
import com.phloc.html.EHTMLElement;
import com.phloc.html.hc.IHCNode;
import com.phloc.html.hc.IHCNodeBuilder;
import com.phloc.html.hc.impl.AbstractHCElementWithChildren;

/**
 * Represents an HTML &lt;PRE&gt; element<br>
 * This file is automatically generated from com.phloc.html.supplementary.main.MainCreateHCClasses so DO NOT EDIT!
 * 
 * @author Philip Helger
 */
public class HCPre extends AbstractHCElementWithChildren <HCPre>
{
  /**
   * Create a new PRE element
   */
  public HCPre ()
  {
    super (EHTMLElement.PRE);
  }

  /**
   * Create a new PRE element with the passed child text
   * @param aChild The child text provider to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final IPredefinedLocaleTextProvider aChild)
  {
    return new HCPre ().addChild (aChild);
  }

  /**
   * Create a new PRE element with the passed child texts
   * @param aChildren The child texts to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final IPredefinedLocaleTextProvider... aChildren)
  {
    return new HCPre ().addChildren (aChildren);
  }

  /**
   * Create a new PRE element with the passed child text
   * @param sChild The child to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final String sChild)
  {
    return new HCPre ().addChild (sChild);
  }

  /**
   * Create a new PRE element with the passed child texts
   * @param aChildren The child texts to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final String... aChildren)
  {
    return new HCPre ().addChildren (aChildren);
  }

  /**
   * Create a new PRE element with the passed child node
   * @param aChild The child node to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final IHCNodeBuilder aChild)
  {
    return new HCPre ().addChild (aChild);
  }

  /**
   * Create a new PRE element with the passed child nodes
   * @param aChildren The child nodes to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final IHCNodeBuilder... aChildren)
  {
    return new HCPre ().addChildren (aChildren);
  }

  /**
   * Create a new PRE element with the passed child node
   * @param aChild The child node to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final IHCNode aChild)
  {
    return new HCPre ().addChild (aChild);
  }

  /**
   * Create a new PRE element with the passed child nodes
   * @param aChildren The child nodes to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final IHCNode... aChildren)
  {
    return new HCPre ().addChildren (aChildren);
  }

  /**
   * Create a new PRE element with the passed child nodes
   * @param aChildren The child nodes to be appended. May be <code>null</code>
   * @return The created HCPre element and never <code>null</code>
   */
  @Nonnull
  public static HCPre create (@Nullable final Iterable <? extends IHCNode> aChildren)
  {
    return new HCPre ().addChildren (aChildren);
  }
}
